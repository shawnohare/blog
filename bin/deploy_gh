#!/usr/bin/env bash
# Run from project run via bin/deploy_sh.
set -ex

readonly publish_repo="https://github.com/shawnohare/shawnohare.github.io"
readonly rev=$(git rev-parse HEAD)

publish_as_submodule() {
    # Sync git with generated site to ensure removed files are deleted from build.
    cd public && rm -rf $(ls) && cd ..
    hugo && cd public

    #  Check if there are any changes. If so commit and override the last
    # non-initial commit. Requires at least one previous non-initial commit.
    if [ ! -z "$(git status --porcelain)" ]; then
      git add --all
      # Uncomment to allow squashing with previous commits.
      git commit -m "tmp"
      git reset --soft HEAD~2
      git commit -m "Rebuilt from ${rev}"
      git push origin master --force
    else
      echo "Nothing to sync."
    fi
}


publish_sync() {
    # Version below assumes that built site is not a submodule.
    # Sync git with generated site to avoid pushing
    make deps
    make clean-public
    hugo || exit 1
    cd public

    #  Check if there are any changes. If so commit and override the last
    # non-initial commit. Requires at least one previous non-initial commit.
    if [ ! -z "$(git status --porcelain)" ]; then
      git add --all
      # Uncomment to allow squashing with previous commits.
      git commit -m "tmp"
      git reset --soft HEAD~2
      # git commit -m "Rebuilt `date` ${rev}"
      git commit -m "Rebuilt from ${rev}"
      git push origin master --force
    else
      echo "Nothing to sync."
    fi
}

# Version
# Simple version that pushes excess files. Site repo has a single commit.
# rm -rf public
# hugo
# cd public
# git init
# git remote add origin "${gh}/shawnohare.github.io"
# git add --all
# git commit -m "Generated from shawnohare.com ${rev}"
# git push -f --set-upstream origin master

publish_sync
